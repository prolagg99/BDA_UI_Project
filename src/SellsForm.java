
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author MEBA
 */
public class SellsForm extends javax.swing.JFrame {

    /**
     * Creates new form SellsForm
     */
    private static int saleId;
    private static int qntBD,qntVante,NvlQntV,qntité,qntitéStock;
    public SellsForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        readSells();
        updateComboBox();
        qntStock.setEditable(false);
        codeBare.setEditable(false);
        désign.setEditable(false);
        prixV.setEditable(false);
        
        userType();
        userType1.setVisible(false);
        if(userType1.getText().contains("Employé")){
            add.setVisible(false);
            add3.setVisible(false);
            update.setVisible(false);
            delete.setVisible(false);
        }
       
    }
    
    ResultSet rs = null;
    private void readSells(){
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.setNumRows(0);
        try (
            Connection con = DbInfo.conDB();
            ){
                String sql = "SELECT * FROM `sales`";
                PreparedStatement ps = con.prepareStatement(sql);
                
                rs = ps.executeQuery();
                while(rs.next()){
                    Object O[] = {rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5),
                        rs.getString(6), rs.getString(7)};
                    model.addRow(O);
                }
                rs.close();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    private void userType(){
        try (
            Connection con = DbInfo.conDB();
            ){
            String sql = "SELECT * FROM `connection`";
            PreparedStatement ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while(rs.next()){
                userType1.setText(rs.getString(2));
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void updateComboBox(){
        try (
                Connection con = DbInfo.conDB();
            ){
            String sql = "SELECT * FROM `clients`";
            PreparedStatement ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            while(rs.next()){
                String name = rs.getString(2) + " " + rs.getString(3);
                jComboBox1.addItem(name);
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabelMin = new javax.swing.JLabel();
        jLabelClose = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        add1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        codeBare = new javax.swing.JTextField();
        désign = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        prixV = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        qnt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        add3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        add2 = new javax.swing.JButton();
        qntStock = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        userType1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(44, 62, 80));

        jLabelMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMin.setText("-");
        jLabelMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
        });

        jLabelClose.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelClose.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClose.setText("X");
        jLabelClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(248, 148, 6));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logo.png"))); // NOI18N
        jLabel2.setText("INDUSTRIE TEXTILE");
        jLabel2.setAlignmentY(0.0F);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelMin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelClose)
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addGap(0, 0, 0))
        );

        jPanel4.setBackground(new java.awt.Color(238, 232, 213));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/statistic.jpg"))); // NOI18N

        delete.setBackground(new java.awt.Color(238, 232, 213));
        delete.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        delete.setText("Supprimer");
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(238, 232, 213));
        back.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/back.png"))); // NOI18N
        back.setText("Back");
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 123, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("POINT DE VENTE");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date_v", "Code_barre", "Désignation", "Prix de vente", "Quantité_v", "Client"
            }
        ));
        jTable1.setFocusable(false);
        jTable1.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTable1.setRowHeight(25);
        jTable1.setSelectionBackground(new java.awt.Color(248, 148, 6));
        jTable1.setShowVerticalLines(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        add1.setBackground(new java.awt.Color(238, 232, 213));
        add1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        add1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/valid1.png"))); // NOI18N
        add1.setText(" Valider");
        add1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel5.setText("Code à barre");

        codeBare.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        codeBare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeBareActionPerformed(evt);
            }
        });
        codeBare.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codeBareKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codeBareKeyTyped(evt);
            }
        });

        désign.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        désign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                désignActionPerformed(evt);
            }
        });
        désign.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                désignKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel6.setText("Désignation");

        date.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });
        date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dateKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel7.setText("Date");

        prixV.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        prixV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prixVActionPerformed(evt);
            }
        });
        prixV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                prixVKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prixVKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel8.setText("Prix de vente");

        qnt.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        qnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qntActionPerformed(evt);
            }
        });
        qnt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qntKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qntKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel9.setText("Quantité");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel10.setText("Nom Client");

        add3.setBackground(new java.awt.Color(238, 232, 213));
        add3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        add3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/plus.png"))); // NOI18N
        add3.setText(" Ajouter");
        add3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add3ActionPerformed(evt);
            }
        });

        add2.setBackground(new java.awt.Color(238, 232, 213));
        add2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        add2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/box.png"))); // NOI18N
        add2.setText(" Produit");
        add2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add2ActionPerformed(evt);
            }
        });

        qntStock.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        qntStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qntStockActionPerformed(evt);
            }
        });
        qntStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qntStockKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qntStockKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel11.setText("Quantité en stock");

        update.setBackground(new java.awt.Color(238, 232, 213));
        update.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/update2.png"))); // NOI18N
        update.setText("Modifier");
        update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(238, 232, 213));
        add.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/plus1.png"))); // NOI18N
        add.setText("Ajouter au vente");
        add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel12.setText("Logout");
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });

        userType1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        userType1.setText("  ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(190, 190, 190)
                        .addComponent(add3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134)
                        .addComponent(jLabel12))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(10, 10, 10)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(désign, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(15, 15, 15)
                                            .addComponent(qnt, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(18, 18, 18)
                                            .addComponent(qntStock, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(10, 10, 10)
                                    .addComponent(codeBare, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(15, 15, 15)
                                    .addComponent(prixV, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(44, 44, 44)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(132, 132, 132)
                            .addComponent(userType1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(add1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(add2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userType1)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(add2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(codeBare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prixV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(désign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)
                                    .addComponent(qntStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(qnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel7))
                                    .addComponent(jLabel9)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );

        jPanel3.setBackground(new java.awt.Color(44, 62, 80));
        jPanel3.setPreferredSize(new java.awt.Dimension(227, 48));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked

        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelMinMouseClicked

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        this.hide();
        MenuForm mf = new MenuForm();
        mf.show();
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
//        try (
//            Connection con = DbInfo.conDB();
//        ){
//            TableModel model1 = jTable1.getModel();
//            int indexs[] = jTable1.getSelectedRows();
//            if(indexs.length != 0){
//                for(int i =0; i < indexs.length; i++){
//                    String codeB = model1.getValueAt(indexs[i], 1).toString();
//                    String désign = model1.getValueAt(indexs[i], 2).toString(); 
//                    qntVante =  Integer.parseInt(model1.getValueAt(indexs[i], 4).toString());
//                    String sql = "SELECT * FROM `sales` WHERE codeBare=? AND désign=?";
//                    String sql1 = "DELETE FROM `sales` WHERE id=?";
//                    PreparedStatement ps = con.prepareStatement(sql);
//                    
//                    ps.setString(1, codeB);
//                    ps.setString(2, désign);
//                    rs = ps.executeQuery();
//                    while(rs.next()){
//                        saleId = rs.getInt(1);
//                    }
//                    rs.close();
//
//                    ps = con.prepareStatement(sql1);
//                    ps.setInt(1, saleId);
//                    ps.executeUpdate();
//                    
//                    String sql3="SELECT * FROM `sproducts` WHERE `désign`=? AND `codeBare`=?";
//                    ps = con.prepareStatement(sql3);
//                    ps.setString(1, désign);
//                    ps.setString(2, codeB);
//                    rs = ps.executeQuery();
//                    while(rs.next()){
//                        qntBD = rs.getInt(4);
//                    }
//                    rs.close();
//                    rs=null;
//                    sql=null;
//                    sql1=null;
//                    String sql4="UPDATE `sproducts` SET `quantité`=? WHERE `désign`=? AND `codeBare`=?";
//                    ps = con.prepareStatement(sql4);
//                    ps.setInt(1, qntBD + qntVante);
//                    ps.setString(2, désign);
//                    ps.setString(3, codeB);
//                    ps.executeUpdate();
//                }
//                MsgForm mf1 = new MsgForm("delete");
//                mf1.show();
//
//                DefaultTableModel model2 = (DefaultTableModel)jTable1.getModel();
//                model2.setRowCount(0);
//                readSells();
//            }
//        } catch (Exception e) {
//        JOptionPane.showMessageDialog(this, e);
//        }
        TableModel model = jTable1.getModel();
        int indexs[] = jTable1.getSelectedRows();
        
        try (
            Connection con = DbInfo.conDB();
            ){
            String sql = "SELECT * FROM `sales` WHERE `date`=? AND `codeBare`=? AND `désign`=? AND `client`=?";
            String sql1 = "DELETE FROM `sales` WHERE id=?";
            String sql2="SELECT * FROM `sproducts` WHERE `désign`=? AND `codeBare`=?";
            String sql3="UPDATE `sproducts` SET `quantité`=? WHERE `désign`=? AND `codeBare`=?";
            
            PreparedStatement ps = con.prepareStatement(sql);
            PreparedStatement ps1 = con.prepareStatement(sql1);
            PreparedStatement ps2 = con.prepareStatement(sql2);
            PreparedStatement ps3 = con.prepareStatement(sql3);
            for(int i=0; i < indexs.length; i++){
                  
                ps.setString(1, model.getValueAt(indexs[i], 0).toString());
                ps.setString(2, model.getValueAt(indexs[i], 1).toString());
                ps.setString(3, model.getValueAt(indexs[i], 2).toString());
                ps.setString(4, model.getValueAt(indexs[i], 5).toString());
                rs = ps.executeQuery();
                while(rs.next()){
                    saleId = rs.getInt(1);
                }
                rs.close();
                ps1.setInt(1, saleId);
                ps1.executeUpdate();
                rs=null;
                
                ps2.setString(1, model.getValueAt(indexs[i], 2).toString());
                ps2.setString(2, model.getValueAt(indexs[i], 1).toString());
                rs = ps2.executeQuery();
                while(rs.next()){
                    qntBD = rs.getInt(4);
                }
                rs.close();
                
                ps3.setInt(1, qntBD + Integer.parseInt(model.getValueAt(indexs[i], 4).toString()));
                ps3.setString(2, model.getValueAt(indexs[i], 2).toString());
                ps3.setString(3, model.getValueAt(indexs[i], 1).toString());
                ps3.executeUpdate();
            }
            MsgForm mf = new MsgForm("delete");
            mf.setVisible(true);
            readSells();
            
        } catch (Exception e) {
             JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.hide();
        MenuForm mf = new MenuForm();
        mf.show();
    }//GEN-LAST:event_backActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        if(codeBare.getText().trim().isEmpty()){
            codeBare.setBorder(BorderFactory.createLineBorder(Color.red));
        }else
        if(désign.getText().trim().isEmpty()){
            désign.setBorder(BorderFactory.createLineBorder(Color.red));
        }else
        if(date.getText().trim().isEmpty()){
            date.setBorder(BorderFactory.createLineBorder(Color.red));
        }else
            if(date.getText().length() != 10){
                MsgForm mf = new MsgForm("date");
                mf.setVisible(true);
            }else
        if(prixV.getText().trim().isEmpty()){
            prixV.setBorder(BorderFactory.createLineBorder(Color.red));
        }else
        if(qnt.getText().trim().isEmpty()){
            qnt.setBorder(BorderFactory.createLineBorder(Color.red));
        }else
            if(Integer.parseInt(qnt.getText()) == 0){
                MsgForm mf = new MsgForm("la quantité est null");
                mf.setVisible(true);
            }else{
            ResultSet rs = null;
            try (
                Connection con = DbInfo.conDB();
                ){
                con.setAutoCommit(false);
                qntité = Integer.parseInt(qnt.getText());
                qntitéStock = Integer.parseInt(qntStock.getText());
                if(qntité <= qntitéStock){
                    String sql= "INSERT INTO `sales`(`date`, `codeBare`, `désign`, `prix`, `quantité`, `client`)"
                            + "VALUES (?,?,?,?,?,?)";
                    PreparedStatement ps = con.prepareStatement(sql);

                    ps.setString(1, date.getText());
                    ps.setString(2, codeBare.getText());
                    ps.setString(3, désign.getText());
                    ps.setString(4, prixV.getText());
                    ps.setString(5, qnt.getText());
                    ps.setString(6, jComboBox1.getSelectedItem().toString());
                    ps.executeUpdate();
                    
                    String sql2="UPDATE `sproducts` SET `quantité`=? WHERE `désign`=? AND `codeBare`=?";
                    PreparedStatement ps1 = con.prepareStatement(sql2);
                    
                    qntitéStock = qntitéStock - qntité;
                    
                    ps1.setInt(1, qntitéStock);
                    ps1.setString(2, désign.getText());
                    ps1.setString(3, codeBare.getText());
                    ps1.executeUpdate();
                    
                    con.commit();
                    DefaultTableModel model4 = (DefaultTableModel)jTable1.getModel();
                    model4.setRowCount(0);
                    readSells();
                    qntStock.setText(String.valueOf(qntitéStock));
                    if(qntitéStock == 0){
                        qntStock.setBorder(BorderFactory.createLineBorder(Color.red));
                    }
                    
                }else if(qntité > qntitéStock && qntitéStock != 0){
                    MsgForm mf = new MsgForm("insuffisants");
                    mf.setVisible(true);
                }else if(qntité > qntitéStock && qntitéStock == 0){
                    MsgForm mf = new MsgForm("no products");
                    mf.setVisible(true);
                    qntStock.setBorder(BorderFactory.createLineBorder(Color.red));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }
        
    }//GEN-LAST:event_addActionPerformed

    private void add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ActionPerformed
        SalesJournalForm sj = new SalesJournalForm(this);
        sj.setVisible(true);
    }//GEN-LAST:event_add1ActionPerformed

    private void codeBareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeBareActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeBareActionPerformed

    private void désignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_désignActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_désignActionPerformed

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateActionPerformed

    private void prixVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prixVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prixVActionPerformed

    private void qntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qntActionPerformed

    private void add3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add3ActionPerformed
        AddClientsForm ac = new AddClientsForm("sells");
        ac.show();
    }//GEN-LAST:event_add3ActionPerformed

    private void add2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add2ActionPerformed
//        the value will selected from the table and set it in the jtextfaild existing
        ProductsForm pf = new ProductsForm("selectProduct");
        pf.setVisible(true);
        pf.pack();
        pf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setVisible(false);
    }//GEN-LAST:event_add2ActionPerformed

    private void codeBareKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeBareKeyTyped
        char c = evt.getKeyChar();
        if(Character.isLetter(c) &&! evt.isAltDown()){
            evt.consume();
        }
    }//GEN-LAST:event_codeBareKeyTyped

    private void prixVKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prixVKeyTyped
        char c = evt.getKeyChar();
        if(Character.isLetter(c) &&! evt.isAltDown()){
            evt.consume();
        }
    }//GEN-LAST:event_prixVKeyTyped

    private void qntKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qntKeyTyped
        char c = evt.getKeyChar();
        if(Character.isLetter(c) &&! evt.isAltDown()){
            evt.consume();
        }
    }//GEN-LAST:event_qntKeyTyped

    private void codeBareKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeBareKeyReleased
        codeBare.setBorder(BorderFactory.createLineBorder(Color.green));
    }//GEN-LAST:event_codeBareKeyReleased

    private void désignKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_désignKeyReleased
        désign.setBorder(BorderFactory.createLineBorder(Color.green));
    }//GEN-LAST:event_désignKeyReleased

    private void dateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateKeyReleased
        date.setBorder(BorderFactory.createLineBorder(Color.green));
    }//GEN-LAST:event_dateKeyReleased

    private void prixVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prixVKeyReleased
        prixV.setBorder(BorderFactory.createLineBorder(Color.green));
    }//GEN-LAST:event_prixVKeyReleased

    private void qntKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qntKeyReleased
        qnt.setBorder(BorderFactory.createLineBorder(Color.green));
    }//GEN-LAST:event_qntKeyReleased

    private void qntStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qntStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qntStockActionPerformed

    private void qntStockKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qntStockKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_qntStockKeyReleased

    private void qntStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qntStockKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_qntStockKeyTyped

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        if(jTable1.getSelectionModel().isSelectionEmpty()){
                MsgForm mf = new MsgForm("noRowSelected");
                mf.setVisible(true);
        }else
        if(codeBare.getText().trim().isEmpty()){
            codeBare.setBorder(BorderFactory.createLineBorder(Color.red));
        }else
        if(désign.getText().trim().isEmpty()){
            désign.setBorder(BorderFactory.createLineBorder(Color.red));
        }else
        if(date.getText().trim().isEmpty()){
            date.setBorder(BorderFactory.createLineBorder(Color.red));
        }else
            if(date.getText().length() != 10){
                MsgForm mf = new MsgForm("date");
                mf.setVisible(true);
            }else
        if(prixV.getText().trim().isEmpty()){
            prixV.setBorder(BorderFactory.createLineBorder(Color.red));
        }else
        if(qnt.getText().trim().isEmpty()){
            qnt.setBorder(BorderFactory.createLineBorder(Color.red));
        }else
            if(Integer.parseInt(qnt.getText()) == 0){
                MsgForm mf = new MsgForm("la quantité est null");
                mf.setVisible(true);
            }else{
            
//                String cb = codeBare.getText();
//                String désg = désign.getText();
//                String client = jComboBox1.getSelectedItem().toString();

                try (
                    Connection con = DbInfo.conDB();
                ){
//                    String sql="SELECT * FROM `sales` WHERE `codeBare`=? AND `désign`=? AND `client`=?";
//                    PreparedStatement ps = con.prepareStatement(sql);
//
//                    ps.setString(1, cb);
//                    ps.setString(2, désg);
//                    ps.setString(3, client);
//                    rs = ps.executeQuery();
//                    while(rs.next()){
//                        saleId = rs.getInt(1);
//                    }
//                    rs.close();
                    // to compar the modification if the new qnt vent > qnt vente or < qnt vente
                    NvlQntV =  Integer.parseInt(qnt.getText());
                    if(NvlQntV > qntVante){
                        MsgForm mf = new MsgForm("insuffisants");
                        mf.setVisible(true);
                    }else if(NvlQntV <= qntVante){
                        String sql1 = "UPDATE `sales` SET `date`=?,`codeBare`=?,`désign`=?,`prix`=?,`quantité`=?,"
                            + "`client`=? WHERE id=?";
                        PreparedStatement ps1 = con.prepareStatement(sql1);
                        ps1.setString(1, date.getText());
                        ps1.setString(2, codeBare.getText());
                        ps1.setString(3, désign.getText());
                        ps1.setString(4, prixV.getText());
                        ps1.setString(5, qnt.getText());
                        ps1.setString(6, jComboBox1.getSelectedItem().toString());
                        ps1.setString(7, Integer.toString(saleId));
                        ps1.executeUpdate();

                        DefaultTableModel model5 = (DefaultTableModel)jTable1.getModel();
                        model5.setRowCount(0);
                        readSells();

                        MsgForm mf = new MsgForm("update");
                        mf.setVisible(true);
                        
                        // update the qnt of products
                        String sql2="UPDATE `sproducts` SET `quantité`=? WHERE `désign`=? AND `codeBare`=?";
                        PreparedStatement ps2 = con.prepareStatement(sql2);
                        
                        ps2.setInt(1, qntVante-NvlQntV);
                        ps2.setString(2, désign.getText());
                        ps2.setString(3, codeBare.getText());
                        ps2.executeUpdate();
                        codeBare.setText("");désign.setText("");date.setText("");prixV.setText("");qnt.setText("");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }
    }//GEN-LAST:event_updateActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        qntStock.setText(null);       
        
        int index = jTable1.getSelectedRow();
        DefaultTableModel model6 = (DefaultTableModel)jTable1.getModel();
        date.setText(model6.getValueAt(index, 0).toString());
        codeBare.setText(model6.getValueAt(index, 1).toString());
        désign.setText(model6.getValueAt(index, 2).toString());
        prixV.setText(model6.getValueAt(index, 3).toString());
        qnt.setText(model6.getValueAt(index, 4).toString());
        jComboBox1.setSelectedItem(model6.getValueAt(index, 5).toString());
        
        codeBare.setBorder(BorderFactory.createLineBorder(Color.green));
        désign.setBorder(BorderFactory.createLineBorder(Color.green));
        date.setBorder(BorderFactory.createLineBorder(Color.green));
        prixV.setBorder(BorderFactory.createLineBorder(Color.green));
        qnt.setBorder(BorderFactory.createLineBorder(Color.green));
        
        // compare the modification : if the new qnt > qnt de vente or < qnt de vente
        qntVante =  Integer.parseInt(model6.getValueAt(index, 4).toString());
        
        
        // get the id of selected row
        String cb = model6.getValueAt(index, 1).toString();
        String désg = model6.getValueAt(index, 2).toString();
        String client = model6.getValueAt(index, 5).toString();
        try (
            Connection con = DbInfo.conDB();
            ){
            String sql="SELECT * FROM `sales` WHERE `codeBare`=? AND `désign`=? AND `client`=?";
            PreparedStatement ps = con.prepareStatement(sql);

            ps.setString(1, cb);
            ps.setString(2, désg);
            ps.setString(3, client);
            rs = ps.executeQuery();
            while(rs.next()){
                saleId = rs.getInt(1);
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        LoginForm lf = new LoginForm();
        lf.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void dateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateKeyTyped
        char c = evt.getKeyChar();
        if(Character.isLetter(c) &&! evt.isAltDown()){
            evt.consume();
        }
    }//GEN-LAST:event_dateKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton add1;
    private javax.swing.JButton add2;
    private javax.swing.JButton add3;
    private javax.swing.JButton back;
    public javax.swing.JTextField codeBare;
    private javax.swing.JTextField date;
    private javax.swing.JButton delete;
    public javax.swing.JTextField désign;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    public javax.swing.JTextField prixV;
    private javax.swing.JTextField qnt;
    public javax.swing.JTextField qntStock;
    private javax.swing.JButton update;
    public javax.swing.JLabel userType1;
    // End of variables declaration//GEN-END:variables
}
